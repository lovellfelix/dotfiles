# set-option -g default-shell /bin/zsh

# set -g default-terminal "screen-256color"
# set -ag terminal-overrides ",alacritty:RGB"

# True color settings
set -g default-terminal "$TERM"
set -ag terminal-overrides ",$TERM:Tc"

# {n}vim compability
# TODO: Not working. We'll need revisiting.
# set-option -ga terminal-overrides ",xterm-256color:Tc"
# set -g default-terminal "screen-256color"

setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on                    # Focus events enabled for terminals that support them

# Tmux prefix
# Use ctl-space for the prefix to free-up ctrl-b (which is very useful).
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

setw -g pane-base-index 1        # start pane numbers at 1
set -g allow-rename on           # don't automatically rename windows
set -g base-index 1              # start window numbers at 1

set -g detach-on-destroy off     # don't exit from tmux when closing a session
set -g escape-time 0             # zero-out escape time delay
set -g history-limit 1000000     # increase history size (from 2,000)
set -g renumber-windows on       # renumber all windows when any window is closed
set -g set-clipboard on          # use system clipboard
set -g mouse on                  # Allow the mouse to resize windows and select tabs
setw -g mode-keys vi             # vi keys for copy mode
set -g status-keys emacs         # emacs keys for status line

# status bar settings 
set -g status-interval 30        # update status line every 30 seconds
set -g status-justify left       # left justify the status line
# set -g status-position top    # macOS / darwin style

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off

# Needed for Iterm integration
# setw -g aggressive-resize off
set-option -g allow-passthrough on
set-option -g set-titles on
set-option -g set-titles-string '#T'

# Cursor shape change for nvim
# set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# 'PREFIX r' to force a reload of the config file
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display-message "~/.config/tmux/tmux.conf Reloaded!"

# window splitting
############################################
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# resize panes
############################################
bind -r H resize-pane -L 1
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1
bind -r L resize-pane -R 1

# Dim inactive windows
############################################
set -g window-style 'fg=color8,bg=default'
set -g window-active-style 'fg=color7,bg=default'

# Vim like copy mode and Paste
############################################
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Manage sessions
############################################
bind n command-prompt -p "New Session:" "new-session -A -s '%%'"
bind s choose-tree -s -O name # Sort sessions by name
bind X confirm-before -p "Kill current session? (y/n)" "kill-session"

# Misc
############################################
# mouse
# Retain selection after highlighting
bind -T copy-mode MouseDragEnd1Pane send-keys -X copy-selection
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection

# https://stackoverflow.com/a/32699916
# Fixes bug with home/end keys
bind -n End send-key C-e
bind -n Home send-key C-a

# open lazygit in a new window with prefix+g
bind-key g new-window -n lazygit -c "#{pane_current_path}" "lazygit"

# # syncronize panes
bind a setw synchronize-panes

# Tmux Toolbox Menu 
bind m display-menu -y C -x C -T "#[align=centre fg=green]Tmux Toolbox" \
  "New Window"                         c   { new-window } \
  "New Session"                        N   { command-prompt -p "New session name: " "new -s %%" } \
  "Choose Window"                      w   { choose-window } \
  "Choose Session"                     s   { choose-session } \
  "" \
  "Split Horizontal"                   %   { split-window -v -c "#{pane_current_path}" } \
  "Split Vertical"                     '"' { split-window -h -c "#{pane_current_path}" } \
  "Main Horizontal"                    1   { select-layout main-horizontal; resize-pane -t 1 -y 70% } \
  "Main Vertical"                      2   { select-layout main-vertical; resize-pane -t 1 -x 70% } \
  "" \
  "Kill Pane"                          x   { kill-pane } \
  "Kill Window"                        W   { confirm-before -p "Kill current window? (y/n)" "kill-window"  } \
  "Kill Session"                       X   { confirm-before -p "Kill current session? (y/n)" "kill-session"  } \
  "" \
  "Move Pane ←"                        "{" { swap-pane -U } \
  "Move Pane →"                        "}" { swap-pane -D } \
  "Convert Pane into Window"           !   { break-pane } \
  "Toggle Pane sync"                   y   { set -w synchronize-panes } \
  "Respawn"                            R   { respawn-pane -k } \
  "#{?pane_marked,Unmark,Mark}"        m   { select-pane -m } \
  "#{?pane_marked_set,,-}Swap Marked"  S   { swap-pane } \
  "" \
  "Rename Window"                      ,   { command-prompt -I "#{window_name}" "rename-window %%" } \
  "Copy Mode"                          M-y { copy-mode } \
  "#{?window_zoomed_flag,Unzoom,Zoom}" z   { resize-pane -Z }

# Plugins
############################################
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'omerxx/tmux-floax'
set -g @plugin 'olimorris/tmux-pomodoro-plus'

# Plugin options
############################################
set -g @continuum-restore 'on'
set -g @continuum-save-interval '5' # Save every 5 minutes
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'

# tmux-floax options
set -g @floax-width '80%'
set -g @floax-height '80%'
set -g @floax-border-color 'cyan'
set -g @floax-text-color 'blue'

# catppuccino options
set -g @catppuccin_application_color "white"
set -g @catppuccin_window_default_color "white"
set -g @catppuccin_window_current_color "blue"
set -g @catppuccin_directory_color "#b7bdf8"

set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W#{?window_zoomed_flag,(),}"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"
# application directory session user host date_time battery 
set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_status_modules_right "directory pomodoro_plus date_time"
set -g @catppuccin_status_left_separator  ""
set -g @catppuccin_status_right_separator " "
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"
set -g @catppuccin_directory_text "#{b:pane_current_path}"
set -g @catppuccin_date_time_text "%H:%M"

set -g @catppuccin_pane_active_border_style "fg=#{thm_blue}" # Use a value compatible with the standard tmux 'pane-border-active-style'
set -g @catppuccin_pane_border_style "fg=#{thm_blue}" # Use a value compatible with the standard tmux 'pane-border-style'
set -g @catppuccin_status_background "default"
set -g @catppuccin_pomodoro_plus_icon  "󰛊 " 

# tmux-pomodoro-plus options
set -g @pomodoro_on " "   
set -g @pomodoro_prompt_break "break?"
set -g @pomodoro_prompt_pomodoro "start?" 

# Initialize TMUX plugin manager
setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.local/share/tmux/plugins"
setenv -g PATH "/opt/homebrew/bin:/bin:/usr/bin"

run '$TMUX_PLUGIN_MANAGER_PATH/tpm/tpm'
